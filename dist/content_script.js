!function(e){var t={};function n(a){if(t[a])return t[a].exports;var o=t[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(a,o,function(t){return e[t]}.bind(null,o));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=29)}({29:function(e,t,n){"use strict";var a;Object.defineProperty(t,"__esModule",{value:!0});const o=n(9),i=n(30);var r,s;n(32),function(e){e[e.get_status=0]="get_status",e[e.send_to_buffer=1]="send_to_buffer"}(r||(r={})),function(e){e[e.general_status=0]="general_status"}(s||(s={})),i.insertControls();let l=e=>{chrome.runtime.sendMessage(e)};function d(e){return 0===e.length}function u(e){return o.u.thread(e,[e=>e.toLowerCase()],[e=>e.trim().split(/\s/).map(e=>{let[t]=e;return`${t.toUpperCase()}${e.slice(1,e.length)}`}).join(" ")])}let[c,h,g]=o.dom.fall("#category, #state, #city");window.addEventListener("keydown",e=>{"f"===e.key&&e.altKey&&e.ctrlKey&&c.focus()}),null===(a=o.dom.f(".commit button",i.UserInputSection))||void 0===a||a.addEventListener("click",e=>{d(c.value)||d(h.value)?window.alert("Category or State is missing"):-1!==i.StatesSuggestions.indexOf(h.value)?(l({command:r.send_to_buffer,category:u(c.value),state:u(h.value),city:d(g.value)?"":u(g.value),data:[...o.u.thread([...o.dom.fall("cite")],[e=>e.reduce((e,t)=>{var n;let a=null===(n=t.textContent)||void 0===n?void 0:n.split(/\s/)[0];return a.endsWith("/")&&(a=a.slice(0,a.length-1)),a.endsWith(".org")||a.endsWith(".gov")||a.endsWith(".info")||a.endsWith(".edu")||a.endsWith(".xyz")||a.endsWith(".biz")||a.endsWith(".io")||e.push(a),e},new Array)],[e=>new Set(e)])]}),window.alert("Batch sent to buffer")):window.alert("Value of state is not in the list of available states in DB.")}),l({command:r.get_status}),chrome.runtime.onMessage.addListener((e,t)=>{switch(e.type){case s.general_status:i.statusArea.appendChild(o.dom.create(`<p>Extension talking to port: <strong>[${e.port}]</strong></p>`)),i.statusArea.appendChild(o.dom.create(`<p>Server online? <strong>[${e.serverOnline?"Yes":"No"}]</strong></p>`))}})},30:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.statusArea=t.StatesSuggestions=t.UserInputSection=t.insertControls=void 0;const a=n(9),o=n(31);var i;Object.defineProperty(t,"StatesSuggestions",{enumerable:!0,get:function(){return o.allStates}}),function(e){e.Up="ArrowUp",e.Down="ArrowDown",e.Enter="Enter",e.Tab="Tab"}(i||(i={}));let r=a.dom.create('<div id="main-panel">\n            <div id="ext-suggestions">\n                <h3>City suggestions</h3>\n                <div class="city-suggestions-panel"></div>\n            </div>\n            <div class="status-area"></div>\n         </div>'),s=a.dom.create('<div class="ext-container controls">\n            <div class="inputs">\n                <input type="text" placeholder="Category" id="category" />\n                <input type="text" placeholder="State" id="state" />\n                <input type="text" placeholder="City" id="city" />\n            </div>\n            <div class="state-suggestions"></div>\n            <div class="city-suggestions"></div>\n            <div class="commit"><button>Commit</button></div>\n        </div>');t.UserInputSection=s;let l=a.dom.f(".status-area",r);t.statusArea=l;let d=a.dom.f("input#state",s),u=a.dom.f("input#city",s),c=a.dom.f(".state-suggestions",s),h=a.dom.f(".city-suggestions",s),g=a.dom.f(".commit button",s),m=a.dom.f("#ext-suggestions .city-suggestions-panel",r);function v(e,t){let n=[...t.childNodes].some(e=>e.classList.contains("selected"));switch(e.key){case i.Down:if(n){let e=a.dom.f(".selected",t);e.classList.remove("selected"),null===e.nextElementSibling?t.firstChild.classList.add("selected"):e.nextElementSibling.classList.add("selected")}else t.firstChild.classList.add("selected");break;case i.Up:if(n){let e=a.dom.f(".selected",t);e.classList.remove("selected"),null===e.previousElementSibling?t.lastChild.classList.add("selected"):e.previousElementSibling.classList.add("selected")}else t.lastChild.classList.add("selected")}}function p(e){[...m.childNodes].forEach(e=>{var t;return null===(t=e.parentElement)||void 0===t?void 0:t.removeChild(e)})}function f(e,t){e in o.statesToCitiesMappings&&o.statesToCitiesMappings[e].forEach(e=>{a.dom.append(a.dom.create(`<span class="suggestion city-suggestion">${e}</span>`),t)})}d.addEventListener("input",e=>{let t=e.target.value.trim();if(t.length>=2){let e=o.allStates.filter(e=>(e=e.toLowerCase(),t=t.toLowerCase(),e===t||e.includes(t)));c.hasChildNodes()&&[...c.childNodes].forEach(e=>{var t;return null===(t=e.parentElement)||void 0===t?void 0:t.removeChild(e)}),e.forEach(e=>a.dom.append(a.dom.create(`<span class="suggestion">${e}</span>`),c))}else[...c.childNodes].forEach(e=>{var t;return null===(t=e.parentElement)||void 0===t?void 0:t.removeChild(e)})}),d.addEventListener("blur",e=>{[...c.childNodes].forEach(e=>{var t;return null===(t=e.parentElement)||void 0===t?void 0:t.removeChild(e)}),e.target.value in o.statesToCitiesMappings||[...m.childNodes].forEach(e=>{var t;return null===(t=e.parentElement)||void 0===t?void 0:t.removeChild(e)})}),d.addEventListener("keydown",e=>{switch(v(e,c),e.key){case i.Enter:d.value=a.dom.f(".selected",c).textContent,u.focus(),p(),f(d.value,m);break;case i.Tab:d.value=a.dom.f(".selected",c).textContent,p(),f(d.value,m)}}),u.addEventListener("blur",e=>{[...h.childNodes].forEach(e=>{var t;return null===(t=e.parentElement)||void 0===t?void 0:t.removeChild(e)})}),u.addEventListener("input",e=>{let t=e.target.value.trim(),n=d.value;if(n in o.statesToCitiesMappings&&t.length>=2){let e=o.statesToCitiesMappings[n].filter(e=>(e=e.toLowerCase(),t=t.toLowerCase(),e===t||e.includes(t)));return h.hasChildNodes()&&[...h.childNodes].forEach(e=>{var t;return null===(t=e.parentElement)||void 0===t?void 0:t.removeChild(e)}),void e.forEach(e=>a.dom.append(a.dom.create(`<span class="suggestion">${e}</span>`),h))}[...h.childNodes].forEach(e=>{var t;return null===(t=e.parentElement)||void 0===t?void 0:t.removeChild(e)})}),u.addEventListener("keydown",e=>{switch(v(e,h),e.key){case i.Enter:u.value=a.dom.f(".selected",h).textContent,g.focus();break;case i.Tab:u.value=a.dom.f(".selected",h).textContent}}),t.insertControls=function(){[r,s].forEach(e=>a.dom.append(e,document.body))}},31:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.statesToCitiesMappings=t.allStates=void 0;t.allStates=["Alabama","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","West Virginia","Wisconsin","Wyoming","Washington D.C"];t.statesToCitiesMappings={Alabama:["Birmingham","Montgomery","Mobile","Huntsville","Tuscaloosa","Hoover","Dothan","Decatur","Auburn","Madison"],Arizona:["Phoenix","Tucson","Mesa","Chandler","Glendale","Scottsdale","Gilbert","Tempe","Peoria","Surprise"],Arkansas:["Little Rock","Fayetteville","Fort Smith","Springdale","Jonesboro","North Little Rock","Conway","Rogers","Bentonville","Pine Bluff"],California:["Los Angeles","San Diego","San Jose","San Francisco","Fresno","Sacramento","Long Beach","Oakland","Bakersfield","Anaheim"],Colorado:["Denver","Colorado Springs","Aurora","Fort Collins","Lakewood","Thornton","Arvada","Westminster","Pueblo","Centennial"],Connecticut:["Bridgeport","New Haven","Hartford","Stamford","Waterbury","Norwalk","Danbury","New Britain","Bristol","Meriden"],Delaware:["Wilmington","Dover","Newark","Middletown","Smyrna"],Florida:["Jacksonville","Miami","Tampa","Orlando","St. Petersburg","Hialeah","Port St. Lucie","Tallahassee","Cape Coral","Fort Lauderdale","Pembroke Pines","Hollywood","Miramar","Gainesville","Coral Springs","Clearwater","Palm Bay","Miami Gardens","Pompano Beach","West Palm Beach","Lakeland","Davie","Boca Raton","Sunrise","Plantation","Deltona","Miami Beach","Palm Coast","Largo","Melbourne","Fort Myers","Deerfield Beach","Boynton Beach","Kissimmee","Lauderhill"],Georgia:["Atlanta","Augusta","Columbus","Macon","Savannah","Athens","Sandy Springs","Roswell","Johns Creek"],Idaho:["Boise","Meridian","Nampa","Idaho Falls ","Pocatello ","Caldwell ","Coeur d'Alene ","Twin Falls ","Post Falls"],Illinois:["Chicago","Aurora","Rockford","Joliet","Naperville","Springfield","Peoria","Elgin","Waukegan"],Indiana:["Indianapolis","Fort Wayne","Evansville","South Bend","Hammond","Bloomington","Gary","Carmel","Fishers"],Iowa:["Des Moines","Cedar Rapids","Davenport","Sioux City","Waterloo","Iowa City","Council Bluffs","Ames","Dubuque"],Kansas:["Wichita","Overland Park","Kansas City","Olathe","Topeka","Lawrence","Shawnee","Manhattan","Lenexa"],Kentucky:["Louisville","Lexington","Bowling Green","Owensboro","Covington"],Louisiana:["New Orleans","Baton Rouge","Shreveport","Lafayette","Lake Charles","Kenner","Bossier City","Monroe","Alexandria"],Maine:["Portland","Lewiston","Bangor","SouthPortland","Auburn","Biddeford","Sanford","Saco","Augusta","Westbrook"],Maryland:["Baltimore","Columbia","Germantown","Silver Spring","Waldorf","Frederick","Ellicott City","Rockville","Glen Burnie","Gaithersburg"],Massachusetts:["Boston","Worcester","Springfield","Cambridge","Lowell","Brockton","Lynn","New Bedford","Quincy","Fall River"],Michigan:["Detroit","Grand Rapids","Warren","Sterling Heights","Ann Arbor","Lansing","Flint","Dearborn","Livonia","Troy"],Minnesota:["Minneapolis","St. Paul","Rochester","Bloomington","Duluth","Brooklyn Park","Plymouth","Maple Grove","Woodbury","Lakeville"],Mississippi:["Jackson","Gulfport","Southaven","Biloxi","Hattiesburg","Olive Branch","Tupelo","Meridian","Greenville","Horn Lake"],Missouri:["Kansas City","St. Louis","Springfield","Columbia","Independence","Lee's Summit","O'Fallon","St. Joseph","St. Charles","St. Peters"],Montana:["Billings","Missoula","Great Falls","Bozeman"],Nebraska:["Omaha","Lincoln","Bellevue","Grand Island"],Nevada:["Las Vegas","Henderson","Reno","North Las Vegas","Paradise","Spring Valley","Sunrise Manor","Enterprise","Sparks","Carson City"],"New Hampshire":["Manchester","Nashua","Concord","Dover","Rochester"],"New Jersey":["Newark","Jersey City","Paterson","Elizabeth","Toms River","Clifton","Trenton","Camden","Passaic","Union City"],"New Mexico":["Albuquerque","Las Cruces","Rio Rancho","Santa Fe"],"New York":["New York","Buffalo","Rochester","Yonkers","Syracuse","Albany","New Rochelle","Cheektowaga","Mount Vernon","Schenectady"],"North Dakota":["Fargo","Bismarck","Grand Forks","Minot","West Fargo"],"North Carolina":["Charlotte","Raleigh","Greensboro","Durham","Winston-Salem","Fayetteville","Cary","Wilmington","High Point","Concord"],Ohio:["Columbus","Cleveland","Cincinnati","Toledo","Akron","Dayton","Parma","Canton","Youngstown","Lorain"],Oklahoma:["Oklahoma City","Tulsa","Norman","Broken Arrow","Edmond","Lawton","Moore","Midwest City","Stillwater","Enid"],Oregon:["Portland","Salem","Eugene","Hillsboro","Gresham","Bend","Beaverton","Medford","Springfield","Corvallis"],Pennsylvania:["Philadelphia","Pittsburgh","Allentown","Erie","Reading","Scranton","Bethlehem","Lancaster","Levittown","Harrisburg"],"Rhode Island":["Providence","Cranston","Warwick","Pawtucket","East Providence","Woonsocket","Newport","Central Falls","Westerly","Valley Falls"],"South Carolina":["Charleston","Columbia","North Charleston","Mount Pleasant","Rock Hill","Greenville","Summerville"],"South Dakota":["Sioux Falls","Rapid City","Aberdeen"],Tennessee:["Nashville","Memphis","Knoxville","Chattanooga","Clarksville","Murfreesboro","Franklin","Jackson","Johnson City","Bartlett"],Texas:["Houston","San Antonio","Dallas","Austin","Fort Worth","El Paso","Arlington","Corpus Christi","Plano","Laredo"],Utah:["Salt Lake City","West Valley City","Provo","West Jordan","Orem","Sandy","St. George","Ogden","Layton","South Jordan"],Vermont:["Burlington","South Burlington"],Virginia:["Virginia Beach","Chesapeake","Norfolk","Richmond","Arlington","Newport News","Alexandria","Hamn","Roanoke","Portsmouth"],"West Virginia":["Charleston","Huntington","Morgantown","Parkersburg"],Wisconsin:["Milwaukee","Madison","Green Bay","Kenosha","Racine","Appleton","Waukesha","Eau Claire","Oshkosh","Janesville"],Wyoming:["Cheyenne","Casper","Laramie"],"Washington D.C":["Seattle","Spokane","Tacoma","Vancouver","Bellevue","Kent","Everett","Spokane Valley","Renton","Federal Way"]}},32:function(e,t,n){},9:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u=t.dom=void 0;class a{static f(e,t=document){return t.querySelector(e)}static fall(e,t=document){return t.querySelectorAll(e)}static create(e){let t=document.createElement("div");return t.innerHTML=e,1==t.children.length?t.children[0].cloneNode(!0):(e=>{let n=[];for(let e=0;e<t.children.length;e++)n.push(t.children[e].cloneNode(!0));return n})()}static setAttr(e,t,n){return e.setAttribute(t,n),e}static getAttr(e,t){return e.getAttribute(t)}static style(e,t){let n=[];for(let e in t)n.push(`${e}: ${t[e]};`);return a.setAttr(e,"style",n.join(""))}static append(e,t){return t.appendChild(e)}static remove(e,t){return t.removeChild(e)}}t.dom=a;t.u=class{static doTimes(e,t){if(!(e<=0))for(let n=0;n<e;n++)t(n)}static thread(e,...t){return t.reduce((e,t)=>{let[n,...a]=t;return e=n(e,...a)},e)}static once(e){let t,n=!1;return(...a)=>(n||(n=!n,t=e(...a)),t)}static noOp(){}static partition(e,t){let n=[],a=[];if(t<=0||0==e.length)return n;if(t>=e.length)return[e];for(let o=Math.ceil(e.length/t),i=0,r=0;r<o;r++){for(let n=0;n<t&&i<e.length;n++)a.push(e[i++]);n.push(a),a=[]}return n}}}});